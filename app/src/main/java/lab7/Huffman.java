/*
 * This source file was generated by the Gradle 'init' task
 */
package lab7;

import heap.Heap;
import avl.AVL;
import java.util.Map.Entry;
import java.util.HashMap;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

public class Huffman {
    public static HashMap countFrequencies(String input){
	HashMap<Character, Integer> result = new HashMap<Character, Integer>();
	char[] text = input.toCharArray();
	for (char k : text){
	    if(!result.containsKey(k)){
		result.put(k, 1);
	    } else {
		result.put(k, result.get(k)+1);
	    }
	}
	return result;
    }
	
	//step2 for(keyset or entryset)
	// put into priority queue
        // also put into tree(something)
	
    public static void main(String[] args) throws FileNotFoundException{
	String fileName = args[0];
	Scanner scanner = new Scanner(new File(fileName));
	HashMap<Character, Integer> charFreq = new HashMap<Character, Integer>();
	StringBuilder sb = new StringBuilder();
	while(scanner.hasNextLine()){
	    sb.append(scanner.nextLine());
	}
	String input = sb.toString();
	charFreq = countFrequencies(input);
	for(char key : charFreq.keySet()){
	    System.out.println("The frequency of " + key +" is " + charFreq.get(key));
	}
    }

    public static String decode(Node root, String input){
	String code = "";
	Node current = root;
	int len = input.length();

	for(int i = 0; i < len; i++){
	    if (input.charAt(i) == '0') {
		current = current.left;
	    } else {
		current = current.right;
	    }
	    if (current.left == null && current.right == null){
		code += current.data;
		current = root;
	    }
	}
	return code;
    }

    public static String encode(String input, PriorityQueue<> eTable){
	
    }
	
    
}
